name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check PR size
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const additions = pr.additions;
          const deletions = pr.deletions;
          const totalChanges = additions + deletions;
          
          let message = '';
          let label = '';
          
          if (totalChanges < 50) {
            message = '✅ Small PR - Easy to review!';
            label = 'size/S';
          } else if (totalChanges < 200) {
            message = '👍 Medium PR - Good size for review';
            label = 'size/M';
          } else if (totalChanges < 500) {
            message = '⚠️ Large PR - Consider breaking it down';
            label = 'size/L';
          } else {
            message = '🚨 Very Large PR - Please break into smaller PRs';
            label = 'size/XL';
          }
          
          console.log(`${message} (${totalChanges} changes)`);
          
          // Add label to PR
          try {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: [label]
            });
          } catch (error) {
            console.log('Could not add label:', error.message);
          }

  title-check:
    name: PR Title Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Check PR title
      uses: actions/github-script@v7
      with:
        script: |
          const title = context.payload.pull_request.title;
          const validPrefixes = ['feat:', 'fix:', 'docs:', 'style:', 'refactor:', 'perf:', 'test:', 'chore:'];
          
          const isValid = validPrefixes.some(prefix => title.toLowerCase().startsWith(prefix));
          
          if (!isValid) {
            core.setFailed(`PR title must start with one of: ${validPrefixes.join(', ')}`);
          } else {
            console.log('✅ PR title follows conventional commits format');
          }

  branch-check:
    name: Branch Protection Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Check branch naming
      run: |
        BRANCH_NAME="${{ github.head_ref }}"
        
        # Check if branch follows naming convention
        if [[ "$BRANCH_NAME" =~ ^(feature|fix|docs|style|refactor|perf|test|chore)/.+ ]]; then
          echo "✅ Branch name follows convention: $BRANCH_NAME"
        else
          echo "⚠️ Branch name should follow pattern: type/description (e.g., feature/add-export)"
          echo "   Current branch: $BRANCH_NAME"
        fi

  files-changed:
    name: Files Changed Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Get changed files
      uses: actions/github-script@v7
      with:
        script: |
          const files = await github.rest.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number
          });
          
          const changedFiles = files.data.map(f => f.filename);
          console.log('📝 Files changed in this PR:');
          changedFiles.forEach(file => console.log(`  - ${file}`));
          
          // Check for sensitive files
          const sensitiveFiles = changedFiles.filter(f => 
            f.includes('.env') || 
            f.includes('secret') || 
            f.includes('credentials')
          );
          
          if (sensitiveFiles.length > 0) {
            core.warning('⚠️ This PR contains changes to potentially sensitive files:');
            sensitiveFiles.forEach(file => core.warning(`  - ${file}`));
          } 